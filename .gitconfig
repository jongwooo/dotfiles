[user]
	name = jongwooo
	email = jongwooo.han@gmail.com
	username = jongwooo
[gitreview]
	username = jongwooo
[core]
	editor = vim
	autocrlf = input
 	excludesfile = ~/.gitignore_global
[pull]
	ff = only
[init]
	defaultBranch = main
[merge]
	tool = vimdiff
[color]
	ui = auto
[alias]
	a = "!git diff-select | xargs git add"
	diff-info = "!# Print diff report.;\n\
		fileA=/tmp/git-s-$(uuidgen); \
		fileB=/tmp/git-diff-$(uuidgen); \
		git st | awk '{print $2,$1}' > $fileA; \
		git diff --numstat | awk '{print $3,$1,$2}' > $fileB; \
		join -t' ' -a 1 $fileA $fileB | awk '{print $2, \"(+\"$3 \",-\"$4\")\", $1}' | sed 's/(+,-)/./; s/^\\([^?]\\) *\\./\\1 STAGED/' | column -t -s' ' ; \
		rm -f $fileA $fileB;"
	diff-select = "!# Select changed files to add them.;\n\
		f() { \
			git diff-info \
			| egrep -v '[^?] *STAGED ' \
			| fzf -m --header \"$(git diff --shortstat)\" --preview \
				\"if [[ {1} == '??' ]]; then bat {3}; else git diff --color=always {3}; fi\" \
			| awk '{print $3}'; \
		}; f"
	diff-unselect = "!# Select staged files to unstage them.;\n\
		f() { \
			| egrep '[^?] *STAGED ' \
			| fzf -m --header \"$(git diff --shortstat)\" --preview \
				\"if [[ {1} == '??' ]]; then pygmentize {3}; else git diff --color=always --cached {3}; fi\" \
			| awk '{print $3}'; \
		}; f"
	c = commit
	cm = commit -m
	ci = commit --signoff
 	s = status
	st = status -s
 	sw = switch
	rt = restore
	ps = push
 	psu = "!git push --set-upstream origin `git b0`"
 	pl = pull
	b = branch
	bd = branch -d
	bD = branch -D
 	m = merge
 	co = checkout
 	cob = checkout -b
 	ch = "!git checkout $(git branch -vv | grep -v '^\\*' | fzf | awk '{print $1}')"
 	b0 = "!git branch | awk '/^\\*/{print $2}'"
 	back = "!git branch backup-`git b0`"
 	gone = "!git fetch -p && git for-each-ref --format '%(refname:short) %(upstream:track)' | awk '$2 == \"[gone]\" {print $1}' | xargs -r git bD"
